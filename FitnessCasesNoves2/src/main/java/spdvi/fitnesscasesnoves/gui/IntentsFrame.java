package spdvi.fitnesscasesnoves.gui;

import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import spdvi.fitnesscasesnoves.dataAcces.DataAccess;
import spdvi.fitnesscasesnoves.dto.Intents;
import spdvi.fitnesscasesnoves.gui.tablemodels.IntentTableCellRenderer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Rulox
 */
public class IntentsFrame extends javax.swing.JFrame {

    /**
     * Creates new form Intents
     */
    public IntentsFrame() {
        
        //ACABAR BOTON EDITAR INTENT
        initComponents();
        this.setLocationRelativeTo(null);
        insertarIntentsAlJtext();
        setTitle("Intents");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Borrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Torna enrera");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("Intents");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(210, 210, 210)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        PaginaPrincipal tca = new PaginaPrincipal();
        tca.setVisible(rootPaneCheckingEnabled);
        this.setVisible(false);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// Verificar si se ha seleccionado una fila en jTable1
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) { // Si una fila está seleccionada
            // Obtener el ID del intent seleccionado (ajusta según tu modelo de datos)
            String intentId = jTable1.getValueAt(selectedRow, 0).toString(); // ID del intent

            // Crear el mensaje del modal
            String mensaje = "¿Estás seguro de querer eliminar el intent con ID " + intentId + "?";

            // Mostrar el modal de confirmación
            int respuesta = JOptionPane.showConfirmDialog(this, mensaje, "Confirmar eliminación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            // Verificar la respuesta del usuario
            if (respuesta == JOptionPane.YES_OPTION) {
                // Lógica para eliminar el intent de la base de datos
                DataAccess da = new DataAccess();
                try {
                    da.eliminarReviewsPorIntentId(Integer.parseInt(intentId));
                    da.eliminarIntent(Integer.parseInt(intentId));
                } catch (SQLException ex) {
                    Logger.getLogger(IntentsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                // Actualizar la tabla después de eliminar
                insertarIntentsAlJtext(); // Vuelve a cargar la tabla sin el intent eliminado
                JOptionPane.showMessageDialog(this, "Intent eliminado con éxito."); // Mensaje de éxito
            }
            // Si el usuario selecciona NO, simplemente no hacemos nada
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un intent para eliminar."); // Mensaje si no hay selección
    }    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DataAccess da = new DataAccess();

        // Obtener la fila seleccionada
        int selectedRow = jTable1.getSelectedRow();

        // Verifica si una fila está seleccionada
        if (selectedRow != -1) {
            // Crear un objeto Intents con los datos de la fila seleccionada
            Intents intent = new Intents(
                    Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString()), // id
                    Integer.parseInt(jTable1.getValueAt(selectedRow, 1).toString()), // idUsuari
                    Integer.parseInt(jTable1.getValueAt(selectedRow, 2).toString()), // idExercici
                    (jTable1.getValueAt(selectedRow, 3) != "" ? jTable1.getValueAt(selectedRow, 3).toString() : null), // timestampInici
                    (jTable1.getValueAt(selectedRow, 4) != "" ? jTable1.getValueAt(selectedRow, 4).toString() : null), // timestampFi
                    (jTable1.getValueAt(selectedRow, 5) != "" ? jTable1.getValueAt(selectedRow, 5).toString() : null) // videoFile
            );

            // Mostrar modal de confirmación
            int respuesta = JOptionPane.showConfirmDialog(this, "Estàs segur que vols modificar l'usuari amb id: " + intent.getId() + "?",
                    "Confirmar modificació", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (respuesta == JOptionPane.YES_OPTION) {
                // Guardar el objeto Intents en la base de datos
                da.actualizarIntent(intent);

                JOptionPane.showMessageDialog(this, "Canvis desats correctament a la base de dades.");
            }
            // Si el usuario selecciona "NO", no se realiza ninguna acción
        } else {
            JOptionPane.showMessageDialog(this, "Si us plau, selecciona una fila per editar.");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1PropertyChange

  public final void insertarIntentsAlJtext() {
    DataAccess da = new DataAccess();
    ArrayList<Intents> intents = da.getIntents();
    Map<Integer, Integer> valoraciones = da.obtenerTodasLasValoraciones();

    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Hacer no editables las celdas
        }
    };
    
    jTable1.setModel(model); // Establecer el modelo en la tabla
    model.setRowCount(0);
    model.setColumnCount(0);

    model.addColumn("ID Intent");
    model.addColumn("ID Usuari");
    model.addColumn("ID Exercici");
    model.addColumn("Timestamp Inici");
    model.addColumn("Timestamp Fi");
    model.addColumn("Video File");

    for (Intents intent : intents) {
        Object[] row = {
            intent.getId(),
            intent.getIdUsuari(),
            intent.getIdExercici(),
            intent.getTimestamp_Inici(),
            intent.getTimestamp_Fi(),
            intent.getVideofile()
        };
        model.addRow(row);
    }

    // Configurar el renderer personalizado para las filas
    IntentTableCellRenderer renderer = new IntentTableCellRenderer(valoraciones);
    for (int i = 0; i < jTable1.getColumnCount(); i++) {
        jTable1.getColumnModel().getColumn(i).setCellRenderer(renderer);
    }

    // Listener para seleccionar y mostrar el ID de la fila seleccionada
    jTable1.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting()) {
            int selectedRow = jTable1.getSelectedRow();
            if (selectedRow != -1) {
                Object id = jTable1.getValueAt(selectedRow, 0);
                System.out.println("ID del intento seleccionado: " + id);
            }
        }
    });
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntentsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntentsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
